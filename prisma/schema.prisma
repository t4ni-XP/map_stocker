generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  googleId     String        @unique
  email        String        @unique
  name         String?
  avatarUrl    String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  role         Role?         @default(USER)
  mapImages    MapImage[]
  mapLocations MapLocation[]
}

model MapLocation {
  id          String       @id @default(cuid())
  name        String
  lat         Float
  lng         Float
  description String?
  userId      String
  terrainType terrainType? @default(FOREST)
  createdAt   DateTime     @default(now())
  mapImages   MapImage[]
  user        User         @relation(fields: [userId], references: [id])
}

model MapImage {
  id             String        @id @default(cuid())
  eventName      String
  mapLocationId  String
  imageUrl       String
  routedImageUrl String?
  date           DateTime
  comment        String
  memo           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  userId         String
  mapLocation    MapLocation   @relation(fields: [mapLocationId], references: [id])
  user           User          @relation(fields: [userId], references: [id])
  tags           MapImageTag[]
}

model Tag {
  id          String        @id @default(cuid())
  name        String        @unique
  MapImageTag MapImageTag[]
}

model MapImageTag {
  mapImageId String
  tagId      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  mapImage   MapImage @relation(fields: [mapImageId], references: [id])
  tag        Tag      @relation(fields: [tagId], references: [id])

  @@id([mapImageId, tagId])
}

enum Role {
  USER
  ADMIN
}

enum terrainType {
  SPRINT
  FOREST
}
