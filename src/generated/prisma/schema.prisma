// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  // uid         String   @unique
  googleId  String   @unique
  email     String   @unique
  name      String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role Role? @default(USER)

  // 関連する地図とかをここで定義
  mapLocations MapLocation[]
  mapImages    MapImage[]
}

enum Role {
  USER
  ADMIN
}

model MapLocation {
  id          String  @id @default(cuid())
  name        String
  lat         Float
  lng         Float
  description String?
  userId      String
  user        User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

model MapImage {
  id            String        @id @default(cuid())
  eventName     String
  mapLocationId String
  imageUrl      String
  date          DateTime
  comment       String
  memo          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  tags          MapImageTag[]
}

model Tag {
  id   String @id @default(cuid())
  name String @unique

  MapImageTag MapImageTag[]
}

model MapImageTag {
  mapImageId String
  mapImage   MapImage @relation(fields: [mapImageId], references: [id])

  tagId String
  tag   Tag    @relation(fields: [tagId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([mapImageId, tagId])
}
